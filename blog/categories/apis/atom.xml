<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: apis | Tomasz Pluskiewicz]]></title>
  <link href="http://t-code.pl/blog/categories/apis/atom.xml" rel="self"/>
  <link href="http://t-code.pl/"/>
  <updated>2021-03-28T12:28:09+00:00</updated>
  <id>http://t-code.pl/</id>
  <author>
    <name><![CDATA[Tomasz Pluskiewicz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Hydra and SHACL - part 2 - IRI Templates]]></title>
    <link href="http://t-code.pl/blog/2020/12/hydra-shacl-templates/"/>
    <updated>2020-12-28T00:00:00+00:00</updated>
    <id>http://t-code.pl/blog/2020/12/hydra-shacl-templates</id>
    <content type="html"><![CDATA[<p>In the <a href="/blog/2020/12/hydra-shacl-interoperability">previous post</a> I presented the simplest functionality of loading remote form contents by having <a href="https://www.w3.org/TR/shacl/">SHACL</a> property shape reference a <a href="http://www.hydra-cg.com/spec/latest/core/">Hydra Core</a> collection.</p>

<p>In the second part I will extend that example to create a form with multiple connected dropdowns, where each one is only populated when other(s) have been selected, which is a common scenario seen in (web) applications.</p>

<!--more-->

<h2 id="tldr-can-i-see-it-working">TL;DR; can I see it working?</h2>

<p>The screenshot below links to Shaperone Playground which implements the ideas described in the subsequent paragraphs.</p>

<p>[<img src="/images/shaperone/hydra-search.png" alt="shaperone playground" />][playground]</p>

<h2 id="filtering-collections-with-hydra">Filtering collections with Hydra</h2>

<p>In addition to <code>hydra:collection</code>, the Hydra Core vocabulary comes with another general-purpose property <code>hydra:search</code>. Unlike most predicates which would link to another resource, identified by a concrete URI, its objects are instances of URI Templates, defined by <a href="https://tools.ietf.org/html/rfc6570">RFC6570</a>.</p>

<p>For example, let’s have a “State collection” resource which returns country’s first-level administrative division. It would come with a search template so that clients can construct filtered URIs:</p>

<rdf-snippet formats="text/turtle,application/n-quads" prefixes="schema,hydra">
<script type="application/ld+json">
{
  "@context": {
    "@vocab": "http://www.w3.org/ns/hydra/core#",
    "schema": "http://schema.org/",
    "property": { "@type": "@id" }
  },
  "@id": "/states",
  "@type": "Collection",
  "search": {
    "@type": "IriTemplate",
    "template": "/states?country={country}",
    "mapping": [{
      "variable": "country",
      "property": "schema:addressCountry",
      "required": true
    }]
  }
}
</script>
</rdf-snippet>

<p>The client must provide template values to a Hydra library which will return a URI fit for dereferencing. This is called <code>expansion</code> by the RFC6570. A Hydra client will take a graph node with values being attached to that node using the <code>hydra:property</code> as defined by the template and match those property/object pairs to the template variables.</p>

<p>Here’s an example of such a template variable model, where JSON-LD <code>@context</code> has been constructed from the <code>hydra:mapping</code>, although the JSON keys may be irrelevant for the expansion if the implementation only relies on the actual graph data.</p>

<rdf-snippet formats="text/turtle,application/n-quads" prefixes="schema,hydra">
<script type="application/ld+json">
{
  "@context": {
    "schema": "http://schema.org/",
    "country": "schema:addressCountry"
  },
  "country": { "@id": "http://www.wikidata.org/entity/Q27" }
}
</script>
</rdf-snippet>

<p>Combine this with the template above to get</p>

<blockquote>
  <p><code>/states?country=http%3A%2F%2Fwww.wikidata.org%2Fentity%2FQ27</code></p>
</blockquote>

<p>Read more about Hydra’s template <a href="http://www.hydra-cg.com/spec/latest/core/#templated-links">here</a></p>

<h2 id="connecting-form-fields">Connecting form fields</h2>

<p>The idea is simple:</p>

<ol>
  <li>A SHACL Shape describes a graph structure</li>
  <li>A form can be generated for agents (usu. humans) to create an instance of such a graph</li>
  <li>Use the created graph to expand a template</li>
</ol>

<p>Now, a form in such a scenario could simply be used to filter a collection for display, but I propose to short-circuit it back into the form itself so that the filtered collection, when dereferenced, provides values for other fields.</p>

<rdf-snippet formats="application/ld+json,application/n-quads" prefixes="schema,hydra,sh,dash">
<script type="text/turtle">
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix schema: <http://schema.org/> .
@prefix dash: <http://datashapes.org/dash#> .
@prefix hydra: <http://www.w3.org/ns/hydra/core#> .

@prefix ex: <http://example.com/> .

schema:Person
  a rdfs:Class, sh:NodeShape ;
  rdfs:label "Register" ;
  sh:property ex:CountryProperty , ex:StateProperty .

ex:CountryProperty
  sh:name "Country" ;
  dash:editor dash:InstancesSelectEditor ;
  sh:path schema:addressCountry ;
  hydra:collection </countries> .

ex:StateProperty
  sh:name "State" ;
  sh:path ex:state ;
  dash:editor dash:InstancesSelectEditor ;
  hydra:search [
    hydra:template "/states?country={country}" ;
    hydra:mapping [
      hydra:property schema:addressCountry ;
      hydra:variable "country" ;
      hydra:required true ;
    ] ;
  ] .
</script>
</rdf-snippet>

<p>The <code>Person</code> shape above has two properties. The first will generate a dropdown with a selection of countries as described in <a href="/blog/2020/12/hydra-shacl-interoperability">the first Hydra+SHACL post</a>. The second, while it’s also going to render a dropdown, will not be populated until a country is selected (<code>hydra:required true</code>).</p>

<p>The glue here is matching property shared between <code>sh:path</code> of the upstream field and <code>hydra:property</code> of the downstream’s search template. In other words, when the form’s graph node receives the value for the <code>schema:addressCountry</code> predicate, the “states” will be loaded.</p>

<h2 id="less-apis-more-web-standards">Less APIs, more Web Standards!</h2>

<p>Again this time, the [playground][playground] example does not “talk” to an actual API but instead runs SPARQL queries encoded into query string parameters of Wikidata’s query endpoint. The trick is to replace a URI of the variable with a URI Template placeholder. <strong>Just gotta make sure that the braces are not percent-encoded</strong>.</p>

<p>The query to load states is simple:</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='sparql'><span class='line'><span class="k">PREFIX</span><span class="w"> </span><span class="nn">wd</span><span class="p">:</span><span class="w"> </span><span class="nl">&lt;a href=&quot;http://www.wikidata.org/entity/&quot;&gt;</span><span class="err">http</span><span class="p">:</span><span class="o">//</span><span class="err">www</span><span class="p">.</span><span class="err">wikid</span><span class="k">a</span><span class="err">t</span><span class="k">a</span><span class="p">.</span><span class="err">org</span><span class="o">/</span><span class="err">entity</span><span class="o">/</span><span class="nl">&lt;/a&gt;</span><span class="w"></span>
</span><span class='line'><span class="k">PREFIX</span><span class="w"> </span><span class="nn">wdt</span><span class="p">:</span><span class="w"> </span><span class="nl">&lt;a href=&quot;http://www.wikidata.org/prop/direct/&quot;&gt;</span><span class="err">http</span><span class="p">:</span><span class="o">//</span><span class="err">www</span><span class="p">.</span><span class="err">wikid</span><span class="k">a</span><span class="err">t</span><span class="k">a</span><span class="p">.</span><span class="err">org</span><span class="o">/</span><span class="err">prop</span><span class="o">/</span><span class="err">direct</span><span class="o">/</span><span class="nl">&lt;/a&gt;</span><span class="w"></span>
</span><span class='line'><span class="k">prefix</span><span class="w"> </span><span class="nn">hydra</span><span class="p">:</span><span class="w"> </span><span class="nl">&lt;a href=&quot;http://www.w3.org/ns/hydra/core#&quot;&gt;</span><span class="err">http</span><span class="p">:</span><span class="o">//</span><span class="err">www</span><span class="p">.</span><span class="err">w</span><span class="mi">3</span><span class="p">.</span><span class="err">org</span><span class="o">/</span><span class="err">ns</span><span class="o">/</span><span class="err">hydr</span><span class="k">a</span><span class="o">/</span><span class="err">core</span><span class="c">#&lt;/a&gt;&lt;/p&gt;</span><span class="w"></span>
</span><span class='line'>
</span><span class='line'><span class="nl">&lt;p&gt;</span><span class="k">CONSTRUCT</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?col</span><span class="w"> </span><span class="k">a</span><span class="w"> </span><span class="nn">hydra</span><span class="p">:</span><span class="nt">Collection</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?col</span><span class="w"> </span><span class="nn">hydra</span><span class="p">:</span><span class="nt">member</span><span class="w"> </span><span class="nv">?division</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?division</span><span class="w"> </span><span class="nn">rdfs</span><span class="p">:</span><span class="nt">label</span><span class="w"> </span><span class="nv">?label</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="p">}</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="k">BIND</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="nl">&lt;urn:contry:collection&gt;</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="nv">?col</span><span class="w"> </span><span class="p">)</span><span class="nl">&lt;/urn:contry:collection&gt;&lt;/p&gt;</span><span class="w"></span>
</span><span class='line'>
</span><span class='line'><span class="nl">&lt;p&gt;</span><span class="err">&amp;lt</span><span class="p">;{</span><span class="err">COUNTRY</span><span class="p">}</span><span class="err">&amp;gt</span><span class="p">;</span><span class="w"> </span><span class="nn">wdt</span><span class="p">:</span><span class="nt">P150</span><span class="w"> </span><span class="nv">?division</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?division</span><span class="w"> </span><span class="nn">rdfs</span><span class="p">:</span><span class="nt">label</span><span class="w"> </span><span class="nv">?label</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="k">filter</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="nf">lang</span><span class="p">(</span><span class="nv">?label</span><span class="p">)</span><span class="w"> </span><span class="k">IN</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="err">‘en’</span><span class="p">,</span><span class="w"> </span><span class="err">‘de’</span><span class="p">,</span><span class="w"> </span><span class="err">‘fr’</span><span class="p">,</span><span class="w"> </span><span class="err">‘pl’</span><span class="p">,</span><span class="w"> </span><span class="err">‘es’</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w"></span>
</span><span class='line'><span class="p">}</span><span class="w"></span>
</span></code></pre></td></tr></table></div></figure></p>

<p>Loading cities is slightly more complicated, accounting for deeper graphs where a state is the root and also various types of cities recognised by Wikidata.</p>

<p><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
</pre></td><td class='code'><pre><code class='sparql'><span class='line'><span class="k">PREFIX</span><span class="w"> </span><span class="nn">wd</span><span class="p">:</span><span class="w"> </span><span class="nl">&lt;a href=&quot;http://www.wikidata.org/entity/&quot;&gt;</span><span class="err">http</span><span class="p">:</span><span class="o">//</span><span class="err">www</span><span class="p">.</span><span class="err">wikid</span><span class="k">a</span><span class="err">t</span><span class="k">a</span><span class="p">.</span><span class="err">org</span><span class="o">/</span><span class="err">entity</span><span class="o">/</span><span class="nl">&lt;/a&gt;</span><span class="w"></span>
</span><span class='line'><span class="k">PREFIX</span><span class="w"> </span><span class="nn">wdt</span><span class="p">:</span><span class="w"> </span><span class="nl">&lt;a href=&quot;http://www.wikidata.org/prop/direct/&quot;&gt;</span><span class="err">http</span><span class="p">:</span><span class="o">//</span><span class="err">www</span><span class="p">.</span><span class="err">wikid</span><span class="k">a</span><span class="err">t</span><span class="k">a</span><span class="p">.</span><span class="err">org</span><span class="o">/</span><span class="err">prop</span><span class="o">/</span><span class="err">direct</span><span class="o">/</span><span class="nl">&lt;/a&gt;</span><span class="w"></span>
</span><span class='line'><span class="k">prefix</span><span class="w"> </span><span class="nn">hydra</span><span class="p">:</span><span class="w"> </span><span class="nl">&lt;a href=&quot;http://www.w3.org/ns/hydra/core#&quot;&gt;</span><span class="err">http</span><span class="p">:</span><span class="o">//</span><span class="err">www</span><span class="p">.</span><span class="err">w</span><span class="mi">3</span><span class="p">.</span><span class="err">org</span><span class="o">/</span><span class="err">ns</span><span class="o">/</span><span class="err">hydr</span><span class="k">a</span><span class="o">/</span><span class="err">core</span><span class="c">#&lt;/a&gt;&lt;/p&gt;</span><span class="w"></span>
</span><span class='line'>
</span><span class='line'><span class="nl">&lt;p&gt;</span><span class="k">CONSTRUCT</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?col</span><span class="w"> </span><span class="k">a</span><span class="w"> </span><span class="nn">hydra</span><span class="p">:</span><span class="nt">Collection</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?col</span><span class="w"> </span><span class="nn">hydra</span><span class="p">:</span><span class="nt">member</span><span class="w"> </span><span class="nv">?city</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?city</span><span class="w"> </span><span class="nn">rdfs</span><span class="p">:</span><span class="nt">label</span><span class="w"> </span><span class="nv">?label</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="p">}</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="k">BIND</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="nl">&lt;urn:contry:collection&gt;</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="nv">?col</span><span class="w"> </span><span class="p">)</span><span class="nl">&lt;/urn:contry:collection&gt;&lt;/p&gt;</span><span class="w"></span>
</span><span class='line'>
</span><span class='line'><span class="nl">&lt;STATE&gt;</span><span class="w"> </span><span class="nn">wdt</span><span class="p">:</span><span class="nt">P150</span><span class="o">*</span><span class="w"> </span><span class="nv">?city</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?city</span><span class="w"> </span><span class="nn">rdfs</span><span class="p">:</span><span class="nt">label</span><span class="w"> </span><span class="nv">?label</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?city</span><span class="w"> </span><span class="nn">wdt</span><span class="p">:</span><span class="nt">P31</span><span class="w"> </span><span class="nv">?cityType</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="w">  </span><span class="nv">?cityType</span><span class="w"> </span><span class="nn">wdt</span><span class="p">:</span><span class="nt">P279</span><span class="w"> </span><span class="nn">wd</span><span class="p">:</span><span class="nt">Q515</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'>
</span><span class='line'><span class="w">  </span><span class="k">filter</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="nf">lang</span><span class="p">(</span><span class="nv">?label</span><span class="p">)</span><span class="w"> </span><span class="k">IN</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="s">&#39;en&#39;</span><span class="p">,</span><span class="w"> </span><span class="s">&#39;de&#39;</span><span class="p">,</span><span class="w"> </span><span class="s">&#39;fr&#39;</span><span class="p">,</span><span class="w"> </span><span class="s">&#39;pl&#39;</span><span class="p">,</span><span class="w"> </span><span class="s">&#39;es&#39;</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w"></span>
</span><span class='line'><span class="p">}</span><span class="w"></span>
</span></code></pre></td></tr></table></div></figure>

Tried as I might, the cities query does not work for every country. United States, Germany and Poland are fine. On the other hand, for Colombia and Australia it finds no cities at all. Queries for Australian cities are also surprisingly slow...

It is not important for the example, but I would be curious to learn from a Wikidata expert how it can be improved.

<script src="/components/rdf-snippet.js"></script>

[playground]: https://forms.hypermedia.app/playground?resource=%7B%0A++%22%40context%22%3A+%7B%0A++++%22rdf%22%3A+%22http%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%22%2C%0A++++%22rdfs%22%3A+%22http%3A%2F%2Fwww.w3.org%2F2000%2F01%2Frdf-schema%23%22%2C%0A++++%22xsd%22%3A+%22http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%22%2C%0A++++%22schema%22%3A+%22http%3A%2F%2Fschema.org%2F%22%2C%0A++++%22foaf%22%3A+%22http%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%22%2C%0A++++%22vcard%22%3A+%22http%3A%2F%2Fwww.w3.org%2F2006%2Fvcard%2Fns%23%22%0A++%7D%2C%0A++%22%40id%22%3A+%22http%3A%2F%2Fexample.com%2Fjohn-doe%22%2C%0A++%22%40type%22%3A+%22schema%3APerson%22%2C%0A++%22schema%3AaddressCountry%22%3A+%7B%0A++++%22%40id%22%3A+%22http%3A%2F%2Fwww.wikidata.org%2Fentity%2FQ39%22%0A++%7D%0A%7D&amp;selectedResource=http%3A%2F%2Fexample.com%2Fjohn-doe&amp;shapes=%40prefix+sh%3A+%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fshacl%23%3E+.%0A%40prefix+schema%3A+%3Chttp%3A%2F%2Fschema.org%2F%3E+.%0A%40prefix+rdfs%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2000%2F01%2Frdf-schema%23%3E+.%0A%40prefix+xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E+.%0A%40prefix+dash%3A+%3Chttp%3A%2F%2Fdatashapes.org%2Fdash%23%3E+.%0A%40prefix+hydra%3A+%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fhydra%2Fcore%23%3E+.%0A%40prefix+wdt%3A+%3Chttp%3A%2F%2Fwww.wikidata.org%2Fprop%2Fdirect%2F%3E+.%0A%40prefix+wd%3A+%3Chttp%3A%2F%2Fwww.wikidata.org%2Fentity%2F%3E+.%0A%0A%40prefix+ex%3A+%3Chttp%3A%2F%2Fexample.com%2F%3E+.%0A%0Aschema%3APerson%0A++a+rdfs%3AClass%2C+sh%3ANodeShape+%3B%0A++rdfs%3Alabel+%22Register%22+%3B%0A++sh%3Aproperty+ex%3ANameProperty+%2C+%0A%09%09++++++ex%3ACountryProperty+%2C+%0A%09%09%09++ex%3AStateProperty+%2C%0A++++++++++++++ex%3ASubStateProperty+%3B%0A.%0A%0Aex%3ANameProperty%0A++sh%3Apath+schema%3Aname+%3B%0A++sh%3Aname+%22Name%22+%3B%0A++sh%3Adatatype+xsd%3Astring+%3B%0A++dash%3AsingleLine+true+%3B%0A++sh%3AmaxCount+1+%3B%0A++sh%3AminCount+1+%3B%0A++sh%3Aorder+10+%3B%0A.%0A%0Aex%3ACountryProperty%0A++sh%3Aname+%22Country%22+%3B%0A++sh%3Aclass+wd%3AQ6256+%3B%0A++dash%3Aeditor+dash%3AInstancesSelectEditor+%3B%0A++sh%3Apath+schema%3AaddressCountry+%3B%0A++sh%3AminCount+1+%3B%0A++sh%3AmaxCount+1+%3B%0A++hydra%3Acollection+%3Chttps%3A%2F%2Fquery.wikidata.org%2Fsparql%3Fquery%3Dprefix%2520hydra%253A%2520%253Chttp%253A%252F%252Fwww.w3.org%252Fns%252Fhydra%252Fcore%2523%253E%250A%250ACONSTRUCT%2520%257B%250A%2520%2520%253Fcol%2520a%2520hydra%253ACollection%2520.%250A%2520%2520%253Fcol%2520hydra%253Amember%2520%253Fcountry%2520.%250A%2520%2520%253Fcountry%2520rdfs%253Alabel%2520%253Flabel%2520.%250A%257D%2520WHERE%2520%257B%250A%2520%2520BIND%2520%2528%2520%253Curn%253Acontry%253Acollection%253E%2520as%2520%253Fcol%2520%2529%250A%250A%2520%2520%253Fcountry%2520wdt%253AP31%2520wd%253AQ6256%2520%253B%2520rdfs%253Alabel%2520%253Flabel%2520.%250A%250A%2520%2520filter%2520%2528%2520lang%2528%253Flabel%2529%2520IN%2520%2528%2520%2527en%2527%252C%2520%2527de%2527%252C%2520%2527fr%2527%252C%2520%2527pl%2527%252C%2520%2527es%2527%2520%2529%2520%2529%250A%257D%3E+%3B%0A++sh%3Aorder+20+%3B%0A.%0A%0A%0Aex%3AStateProperty%0A++sh%3Aname+%22State%22+%3B%0A++sh%3Apath+schema%3AaddressRegion+%3B%0A++sh%3AminCount+1+%3B%0A++sh%3AmaxCount+1+%3B%0A++dash%3Aeditor+dash%3AInstancesSelectEditor+%3B%0A++hydra%3Asearch+%5B%0A++++hydra%3Atemplate+%22https%3A%2F%2Fquery.wikidata.org%2Fsparql%3Fquery%3DPREFIX%2520wd%253A%2520%253Chttp%253A%252F%252Fwww.wikidata.org%252Fentity%252F%253E%250APREFIX%2520wdt%253A%2520%253Chttp%253A%252F%252Fwww.wikidata.org%252Fprop%252Fdirect%252F%253E%250Aprefix%2520hydra%253A%2520%253Chttp%253A%252F%252Fwww.w3.org%252Fns%252Fhydra%252Fcore%2523%253E%250A%250ACONSTRUCT%2520%257B%250A%2520%2520%253Fcol%2520a%2520hydra%253ACollection%2520.%250A%2520%2520%253Fcol%2520hydra%253Amember%2520%253Fdivision%2520.%250A%2520%2520%253Fdivision%2520rdfs%253Alabel%2520%253Flabel%2520.%250A%257D%2520WHERE%2520%257B%250A%2520%2520BIND%2520%2528%2520%253Curn%253Acontry%253Acollection%253E%2520as%2520%253Fcol%2520%2529%250A%2520%2520%250A%2520%2520%253C%7BCOUNTRY%7D%253E%2520wdt%253AP150%2520%253Fdivision%2520.%250A%2520%2520%253Fdivision%2520rdfs%253Alabel%2520%253Flabel%2520.%250A%2520%2520filter%2520%2528%2520lang%2528%253Flabel%2529%2520IN%2520%2528%2520%2527en%2527%252C%2520%2527de%2527%252C%2520%2527fr%2527%252C%2520%2527pl%2527%252C%2520%2527es%2527%2520%2529%2520%2529%250A%257D%22+%3B%0A++++hydra%3Amapping+%5B%0A++++++hydra%3Aproperty+schema%3AaddressCountry+%3B%0A++++++hydra%3Avariable+%22COUNTRY%22+%3B%0A++++++hydra%3Arequired+true+%3B%0A++++%5D+%3B%0A++%5D+%3B%0A++sh%3Aorder+30+%3B%0A.%0A%0A%0Aex%3ASubStateProperty%0A++sh%3Aname+%22City%22+%3B%0A++sh%3Apath+schema%3AaddressLocality+%3B%0A++sh%3AminCount+1+%3B%0A++sh%3AmaxCount+1+%3B%0A++dash%3Aeditor+dash%3AInstancesSelectEditor+%3B%0A++hydra%3Asearch+%5B%0A++++hydra%3Atemplate+%22https%3A%2F%2Fquery.wikidata.org%2Fsparql%3Fquery%3DPREFIX%2520wd%253A%2520%253Chttp%253A%252F%252Fwww.wikidata.org%252Fentity%252F%253E%250APREFIX%2520wdt%253A%2520%253Chttp%253A%252F%252Fwww.wikidata.org%252Fprop%252Fdirect%252F%253E%250Aprefix%2520hydra%253A%2520%253Chttp%253A%252F%252Fwww.w3.org%252Fns%252Fhydra%252Fcore%2523%253E%250A%250ACONSTRUCT%2520%257B%250A%2520%2520%253Fcol%2520a%2520hydra%253ACollection%2520.%250A%2520%2520%253Fcol%2520hydra%253Amember%2520%253Fcity%2520.%250A%2520%2520%253Fcity%2520rdfs%253Alabel%2520%253Flabel%2520.%250A%257D%2520WHERE%2520%257B%250A%2520%2520BIND%2520%2528%2520%253Curn%253Acontry%253Acollection%253E%2520as%2520%253Fcol%2520%2529%250A%2520%250A%2520%2520%257B%250A%2520%2520%2520%2520SELECT%2520%253Fcity%2520%253Flabel%2520WHERE%2520%257B%250A%2520%2520%2520%2520%2520%2520%253C%7BSTATE%7D%253E%2520wdt%253AP150%252B%2520%253Fcity%2520.%250A%2520%2520%2520%2520%2520%2520%253Fcity%2520rdfs%253Alabel%2520%253Flabel%2520.%250A%2520%2520%2520%2520%2520%2520%253Fcity%2520wdt%253AP31%2520%253FcityType%2520.%250A%2520%2520%2520%2520%2520%2520%253FcityType%2520wdt%253AP279%2520wd%253AQ515%2520.%250A%2520%2520%2520%2520%257D%250A%2520%2520%257D%250A%2520%2520UNION%250A%2520%2520%257B%250A%2520%2520%2520%2520SELECT%2520%253Fcity%2520%253Flabel%2520WHERE%2520%257B%2520%2520%2520%2520%250A%2520%2520%2520%2520%2520%2520%253C%7BSTATE%7D%253E%2520wdt%253AP150%252B%2520%253Fcity%2520.%250A%2520%2520%2520%2520%2520%2520%253Fcity%2520rdfs%253Alabel%2520%253Flabel%2520.%250A%2520%2520%2520%2520%2520%2520%253Fcity%2520wdt%253AP31%2520wd%253AQ515%2520.%250A%2520%2520%2520%2520%257D%250A%2520%2520%257D%250A%2520%2520filter%2520%2528%2520lang%2528%253Flabel%2529%2520IN%2520%2528%2520%2527en%2527%252C%2520%2527de%2527%252C%2520%2527fr%2527%252C%2520%2527pl%2527%252C%2520%2527es%2527%2520%2529%2520%2529%250A%257D%22+%3B%0A++++hydra%3Amapping+%5B%0A++++++hydra%3Aproperty+schema%3AaddressRegion+%3B%0A++++++hydra%3Avariable+%22STATE%22+%3B%0A++++++hydra%3Arequired+true+%3B%0A++++%5D+%3B%0A++%5D+%3B%0A++sh%3Aorder+40+%3B%0A.
</STATE>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hydra and SHACL - a perfect couple - part 1]]></title>
    <link href="http://t-code.pl/blog/2020/12/hydra-shacl-interoperability/"/>
    <updated>2020-12-20T00:00:00+00:00</updated>
    <id>http://t-code.pl/blog/2020/12/hydra-shacl-interoperability</id>
    <content type="html"><![CDATA[<p><a href="http://www.hydra-cg.com/spec/latest/core/">Hydra Core</a> is a community-driven specification for describing hypermedia APIs in a machine readable form so that client applications can discover the resources at runtime. On its own, however, it is not expressible enough to describe any arbitrary resource representation.
<a href="https://www.w3.org/TR/shacl/">SHACL</a>, or Shapes Constraint Language, on the other hand is a beautifully extensible schema-like language which offers great power and flexibility in describing graph data structures.
Combined, they provide a complete solution for building hypermedia applications driven by RDF.</p>

<!--more-->

<h2 id="tldr-i-want-some-action">TL;DR; I want some action!</h2>

<p>Click the image to open Shaperone Playground, which demonstrates a working example of a form generated from a SHACL shape which dynamically loads Wikidata resources using SPARQL.</p>

<p>At the bottom of this post you will see how to configure <a href="https://github.com/hypermedia-app/shaperone">shaperone</a> this way.</p>

<p><a href="https://forms.hypermedia.app/playground?resource=%7B%0A++%22%40context%22%3A+%7B%0A++++%22rdf%22%3A+%22http%3A%2F%2Fwww.w3.org%2F1999%2F02%2F22-rdf-syntax-ns%23%22%2C%0A++++%22rdfs%22%3A+%22http%3A%2F%2Fwww.w3.org%2F2000%2F01%2Frdf-schema%23%22%2C%0A++++%22xsd%22%3A+%22http%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%22%2C%0A++++%22schema%22%3A+%22http%3A%2F%2Fschema.org%2F%22%2C%0A++++%22foaf%22%3A+%22http%3A%2F%2Fxmlns.com%2Ffoaf%2F0.1%2F%22%2C%0A++++%22vcard%22%3A+%22http%3A%2F%2Fwww.w3.org%2F2006%2Fvcard%2Fns%23%22%2C%0A++++%22dcat%22%3A+%22http%3A%2F%2Fwww.w3.org%2Fns%2Fdcat%23%22%0A++%7D%2C%0A++%22%40id%22%3A+%22http%3A%2F%2Fexample.com%2Fjohn-doe%22%2C%0A++%22%40type%22%3A+%22schema%3APerson%22%2C%0A++%22schema%3Aname%22%3A+%22John+Doe%22%0A%7D&amp;selectedResource=http%3A%2F%2Fexample.com%2Fjohn-doe&amp;shapes=%40prefix+sh%3A+%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fshacl%23%3E+.%0A%40prefix+schema%3A+%3Chttp%3A%2F%2Fschema.org%2F%3E+.%0A%40prefix+rdfs%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2000%2F01%2Frdf-schema%23%3E+.%0A%40prefix+xsd%3A+%3Chttp%3A%2F%2Fwww.w3.org%2F2001%2FXMLSchema%23%3E+.%0A%40prefix+dash%3A+%3Chttp%3A%2F%2Fdatashapes.org%2Fdash%23%3E+.%0A%40prefix+hydra%3A+%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fhydra%2Fcore%23%3E+.%0A%40prefix+wdt%3A+%3Chttp%3A%2F%2Fwww.wikidata.org%2Fprop%2Fdirect%2F%3E+.%0A%40prefix+wd%3A+%3Chttp%3A%2F%2Fwww.wikidata.org%2Fentity%2F%3E+.%0A%0A%40prefix+ex%3A+%3Chttp%3A%2F%2Fexample.com%2F%3E+.%0A%0Aschema%3APerson%0A++a+rdfs%3AClass%2C+sh%3ANodeShape+%3B%0A++rdfs%3Alabel+%22Register%22+%3B%0A++sh%3Aproperty+ex%3ANameProperty+%2C+ex%3ACountryProperty+%3B%0A.%0A%0Aex%3ANameProperty%0A++sh%3Apath+schema%3Aname+%3B%0A++sh%3Aname+%22Name%22+%3B%0A++sh%3Adatatype+xsd%3Astring+%3B%0A++dash%3AsingleLine+true+%3B%0A++sh%3AmaxCount+1+%3B%0A++sh%3AminCount+1+%3B%0A++sh%3Aorder+10+%3B%0A.%0A%0Aex%3ACountryProperty%0A++a+sh%3APropertyShape+%3B%0A++sh%3Aname+%22Country%22+%3B%0A++sh%3Aclass+wd%3AQ6256+%3B%0A++dash%3Aeditor+dash%3AInstancesSelectEditor+%3B%0A++sh%3Apath+wdt%3AP27+%3B%0A++sh%3AminCount+1+%3B%0A++sh%3AmaxCount+1+%3B%0A++hydra%3Acollection+%3Chttps%3A%2F%2Fquery.wikidata.org%2Fsparql%3Fquery%3Dprefix%2520hydra%253A%2520%253Chttp%253A%252F%252Fwww.w3.org%252Fns%252Fhydra%252Fcore%2523%253E%250A%250ACONSTRUCT%2520%257B%250A%2520%2520%253Fcol%2520a%2520hydra%253ACollection%2520.%250A%2520%2520%253Fcol%2520hydra%253Amember%2520%253Fcountry%2520.%250A%2520%2520%253Fcountry%2520rdfs%253Alabel%2520%253Flabel%2520.%250A%257D%2520WHERE%2520%257B%250A%2520%2520BIND%2520%2528%2520%253Curn%253Acontry%253Acollection%253E%2520as%2520%253Fcol%2520%2529%250A%250A%2520%2520%253Fcountry%2520wdt%253AP31%2520wd%253AQ6256%2520%253B%2520rdfs%253Alabel%2520%253Flabel%2520.%250A%250A%2520%2520filter%2520%2528%2520lang%2528%253Flabel%2529%2520IN%2520%2528%2520%2527en%2527%252C%2520%2527de%2527%252C%2520%2527fr%2527%252C%2520%2527pl%2527%252C%2520%2527es%2527%2520%2529%2520%2529%250A%257D%3E+%3B%0A++sh%3Aorder+20+%3B%0A.%0A&amp;disableEditorChoice=true&amp;components=vaadin"><img src="/images/shaperone/hydra-collection.png" alt="shaperone playground" /></a></p>

<h2 id="hydra-http-request-descriptions">Hydra HTTP request descriptions</h2>

<p>The Hydra vocabulary defines a term <code>hydra:Operation</code> which represents a HTTP request which a server advertises as being supported by specific resources, either by a specific instance or entire class of resources.</p>

<p>For the sake of this blog post, let’s consider a hypothetical API which describes a registration request:</p>

<rdf-snippet formats="application/ld+json,application/n-quads" prefixes="schema,hydra">
   <script type="text/turtle">
base <http://example.app/api#>
prefix schema: <http://schema.org/>
prefix hydra:  <http://www.w3.org/ns/hydra/core#>
prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>

<UsersCollection>
  a hydra:Class ;
  rdfs:subClassOf hydra:Collection ;
  hydra:supportedOperation <RegisterUser> .

<RegisterUser>
  a hydra:Operation , schema:CreateAction ;
  hydra:method "POST" ;
  hydra:expects <User> ;
.

<User> a hydra:Class .
   </script>
</rdf-snippet>

<p>The above snippet, excerpt from the API’s <a href="http://www.hydra-cg.com/spec/latest/core/#documenting-a-web-api">Documentation resource</a>, declares that the clients will come across a collection of users (<code>rdf:type &lt;UserCollection&gt;</code>) against which a POST request will be possible to create a new resource. That operation will require a representation of the <code>&lt;User&gt;</code> class.</p>

<p>While Hydra Core vocabulary does have a basic set of terms which can describe the user class, it may not be enough to cater for rich client-server interactions as well as a UI building block. Neither will be RDFS, and OWL, although quite powerful, is a little complex and seriously lacks tooling support and widespread recognition.</p>

<p>Enter, SHACL.</p>

<h2 id="using-shacl-to-describe-api-payloads">Using SHACL to describe API payloads</h2>

<p>SHACL is another RDF vocabulary, which describes data graphs by constraining properties and values of precisely targeted nodes in an RDF graph. It could be used to complement the API Documentation graph above by providing the required shape of instances of the <code>&lt;User&gt;</code> class. This is easiest done by turning it into an <a href="https://www.w3.org/TR/shacl/#implicit-targetClass">implicitly targeted</a> <a href="https://www.w3.org/TR/shacl/#node-shapes"><code>sh:NodeShape</code></a>.</p>

<p>In this example let’s require users to provide exactly one name (using <code>schema:name</code>) and exactly one country of citizenship (using said Wikidata property <a href="https://www.wikidata.org/wiki/Property:P27">P27</a>)</p>

<rdf-snippet formats="application/ld+json,application/n-quads" prefixes="schema,hydra,sh,dash">
   <script type="text/turtle">
prefix hydra:  <http://www.w3.org/ns/hydra/core#>
prefix rdfs:   <http://www.w3.org/2000/01/rdf-schema#>
prefix sh:     <http://www.w3.org/ns/shacl#>
prefix schema: <http://schema.org/>
prefix dash:   <http://datashapes.org/dash#>
prefix wdt:    <http://www.wikidata.org/prop/direct/>
prefix wd:     <http://www.wikidata.org/entity/>
prefix xsd:    <http://www.w3.org/2001/XMLSchema#>

<User>
  a hydra:Class , rdfs:Class , sh:NodeShape ;
  sh:property [
    a sh:PropertyShape ;
    sh:path schema:name ;
    sh:name "Name" ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:datatype xsd:string ;
    sh:minLength 3 ;
    sh:order 10 ;
    dash:singleLine true ;
  ] , [
    a sh:PropertyShape ;
    sh:name "Country" ;
    sh:class wd:Q6256 ;
    sh:path wdt:P27 ;
    sh:minCount 1 ;
    sh:maxCount 1 ;
    sh:order 20 ;
    dash:editor dash:InstancesSelectEditor ;
  ] ;
.
   </script>
</rdf-snippet>

<p>Hopefully this is quite self-explanatory so far.</p>

<ol>
  <li>The objects of <code>sh:property</code> require that any instance of <code>&lt;User&gt;</code> have exactly one of each property, declared using <code>sh:path</code>. That is achieved using <code>sh:minCount</code> and <code>sh:maxCount</code></li>
  <li>Name must be at least 3 characters long string</li>
  <li>Country must be an instance of Wikidata Country class <code>wd:Q6256</code></li>
  <li>Exactly one country is allowed</li>
  <li><code>sh:order</code> is a UI hint for organising inputs in a form</li>
  <li><code>dash:singleLine</code> is a form builder hint which ensures that the text field does not allow line breaks (ie. no <code>&lt;textarea&gt;</code>)</li>
  <li><code>dash:editor</code> instructs the form builder to create an input component with a selection of instances of the desired RDF type</li>
</ol>

<p>SHACL is quite wonderful in that shapes are useful for many purposes. Check the <a href="https://www.w3.org/TR/shacl-ucr/">SHACL Use Cases and Requirements</a> note for a host of examples. In the presented scenario, a rich client can use to dynamically produce a form to have users input the data, and the server will run validations to check that requests payloads satisfy the SHACL constraints.</p>

<p>There is one piece missing however: <strong>where do the Country instances come from?</strong> 🤨</p>

<h2 id="circling-back-to-hydra">Circling back to Hydra</h2>

<p>Out of the box, a SHACL processor would assume that any instances would be part the <a href="https://www.w3.org/TR/shacl/#data-graph">Data Graph</a>. While this works for validation inside of TopBraid it is not feasible to build a browser application that way. For example, at the time of writing there are 171 instances of Country in Wikidata. Combined with a multitude of labels in various languages that is total of over 40 thousand triples. It’s hardly a good idea to push that proactively to the client up front.</p>

<p>Instead, I propose to connect the Shape back with the API using Hydra Core term <code>hydra:collection</code>. It is defined modestly:</p>

<blockquote>
  <p>Collections somehow related to this resource.</p>
</blockquote>

<p>It also does not have and <code>rdfs:range</code> or <code>rdfs:domain</code> making it a good candidate for linking a property shape directly with its data source:</p>

<p>```diff
prefix hydra: <a href="http://www.w3.org/ns/hydra/core#">http://www.w3.org/ns/hydra/core#</a>
prefix sh: <a href="http://www.w3.org/ns/shacl#">http://www.w3.org/ns/shacl#</a>
prefix wdt: <a href="http://www.wikidata.org/prop/direct/">http://www.wikidata.org/prop/direct/</a> 
prefix wd: <a href="http://www.wikidata.org/entity/">http://www.wikidata.org/entity/</a></p>

<User> 
  sh:property [
    a sh:PropertyShape ;
    sh:class wd:Q6256 ;
    sh:path wdt:P27 ;
+   hydra:collection &lt;https://example.app/countries&gt; ;
  ] ;
.
<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>
</span><span class='line'>By adding this property a UI component can load the countries by dereferencing a `hydra:Collection` whose representation would look somewhat like this:
</span><span class='line'>
</span><span class='line'>&lt;rdf-snippet formats="application/ld+json,application/n-quads" prefixes="hydra"&gt;
</span><span class='line'>   &lt;script type="text/turtle"&gt;
</span><span class='line'>prefix hydra: &lt;http://www.w3.org/ns/hydra/core#&gt;
</span><span class='line'>prefix wd:    &lt;http://www.wikidata.org/entity/&gt;
</span><span class='line'>prefix rdfs:  &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
</span><span class='line'>
</span><span class='line'>&lt;https://example.app/countries&gt;
</span><span class='line'>  a hydra:Collection ;
</span><span class='line'>  hydra:member wd:Q36 , wd:Q183 , wd:Q145 ;
</span><span class='line'>  hydra:totalItems 171 ;
</span><span class='line'>.
</span><span class='line'>
</span><span class='line'>wd:Q36 rdfs:label "Poland"@en , "Polska"@pl , "Polen"@de .
</span><span class='line'>wd:Q183 rdfs:label "Germany"@en , "Niemcy"@pl , "Deutschland"@de .
</span><span class='line'>wd:Q145 rdfs:label "United Kingdom"@en , "Zjednoczone Królestwo"@pl , "Vereinigtes Königreich"@de .
</span><span class='line'>   &lt;/script&gt;
</span><span class='line'>&lt;/rdf-snippet&gt;
</span><span class='line'>
</span><span class='line'>## APIs are dead; Long live (Linked Data) APIs!
</span><span class='line'>
</span><span class='line'>![linked data mug](https://hydra.t-code.pl/img/linked_data.jpg)
</span><span class='line'>
</span><span class='line'>So far the subject was APIs, but the web is more than just servers returning data, even if that data is RDF. You see, the hypothetical registration form above actually references a third party dataset, which is Wikidata. All of this data is already on the web and use standard formats. By using a simple SPARQL query the countries can be [fetched directly from their source](https://w.wiki/rsz); without even adding the `/countries` resource to your API. Heck, the client appication would not need a dedicated API at all!
</span><span class='line'>
</span><span class='line'><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
</pre></td><td class='code'><pre><code class='sparql'><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="c"># wd: and wdt: are implicitly added by wikidata&#39;s SPARQL endpoint</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="k">prefix</span><span class="w"> </span><span class="nn">hydra</span><span class="p">:</span><span class="w"> </span><span class="err">&amp;lt</span><span class="p">;</span><span class="err">http</span><span class="p">:</span><span class="o">//</span><span class="err">www</span><span class="p">.</span><span class="err">w</span><span class="mi">3</span><span class="p">.</span><span class="err">org</span><span class="o">/</span><span class="err">ns</span><span class="o">/</span><span class="err">hydr</span><span class="k">a</span><span class="o">/</span><span class="err">core</span><span class="c">#&amp;gt;</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="k">CONSTRUCT</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="nv">?col</span><span class="w"> </span><span class="k">a</span><span class="w"> </span><span class="nn">hydra</span><span class="p">:</span><span class="nt">Collection</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="nv">?col</span><span class="w"> </span><span class="nn">hydra</span><span class="p">:</span><span class="nt">member</span><span class="w"> </span><span class="nv">?country</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="nv">?country</span><span class="w"> </span><span class="nn">rdfs</span><span class="p">:</span><span class="nt">label</span><span class="w"> </span><span class="nv">?label</span><span class="w"> </span><span class="p">.</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="p">}</span><span class="w"> </span><span class="k">WHERE</span><span class="w"> </span><span class="p">{</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="k">BIND</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="err">&amp;lt</span><span class="p">;</span><span class="err">https</span><span class="p">:</span><span class="o">//</span><span class="err">ex</span><span class="k">a</span><span class="err">mple</span><span class="p">.</span><span class="k">a</span><span class="err">pp</span><span class="o">/</span><span class="err">countries&amp;gt</span><span class="p">;</span><span class="w"> </span><span class="k">as</span><span class="w"> </span><span class="nv">?col</span><span class="w"> </span><span class="p">)</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="c"># wdt:P31 - &quot;instance of&quot;</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="c"># wd:Q6256 - &quot;country&quot;</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="nv">?country</span><span class="w"> </span><span class="nn">wdt</span><span class="p">:</span><span class="nt">P31</span><span class="w"> </span><span class="nn">wd</span><span class="p">:</span><span class="nt">Q6256</span><span class="w"> </span><span class="p">;</span><span class="w"> </span><span class="nn">rdfs</span><span class="p">:</span><span class="nt">label</span><span class="w"> </span><span class="nv">?label</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="c"># only request labels in a handful of languages</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="c"># to dramatically reduce response size</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w">  </span><span class="k">FILTER</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="nf">lang</span><span class="p">(</span><span class="nv">?label</span><span class="p">)</span><span class="w"> </span><span class="k">IN</span><span class="w"> </span><span class="p">(</span><span class="w"> </span><span class="s">&#39;en&#39;</span><span class="p">,</span><span class="w"> </span><span class="s">&#39;de&#39;</span><span class="p">,</span><span class="w"> </span><span class="s">&#39;fr&#39;</span><span class="p">,</span><span class="w"> </span><span class="s">&#39;pl&#39;</span><span class="p">,</span><span class="w"> </span><span class="s">&#39;es&#39;</span><span class="w"> </span><span class="p">)</span><span class="w"> </span><span class="p">)</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="p">}</span><span class="w"></span>
</span><span class='line'><span class="nl">&lt;/span&gt;&lt;span class=&#39;line&#39;&gt;</span><span class="w"></span>
</span></code></pre></td></tr></table></div></figure>
</span><span class='line'>
</span><span class='line'>This query can be directly encoded in a URL to GET the countries and populate a dropdown component. You can see that in the [playground][playground], mentioned in the beginning.
</span><span class='line'>
</span><span class='line'>All possible thanks to web standards 🤘
</span><span class='line'>
</span><span class='line'>## Implementation notes
</span><span class='line'>
</span><span class='line'>Shaperone makes building a Hydra-aware form like this easy:
</span></code></pre></td></tr></table></div></figure></notextile></div>ts
import * as components from '@hydrofoil/shaperone-wc/NativeComponents'
// OR import * as components from '@hydrofoil/shaperone-wc-material/components'
// OR import * as components from '@hydrofoil/shaperone-wc-vaadin/components'
// OR roll your own rendering components
import * as configure from '@hydrofoil/shaperone-wc/configure'
import { instancesSelector } from '@hydrofoil/shaperone-hydra/components'

// register UI component which will do the rendering
configure.components.pushComponents(components)

// add Hydra extension to dash:InstancesSelectEditor
configure.editors.decorate(instancesSelector.matcher)
configure.components.decorate(instancesSelector.decorator())
```

The `@hydrofoil/shaperone-hydra` package extends the default behaviour to have `hydra:collection` dereferenced rather than looking for the instance data locally.

## Next steps

In future posts I will present how to:

2. use Hydra descriptions to find collections without `hydra:collection` directly
3. `hydra:search` URI Templates can be used to:
   - create forms with dependent fields, so that users first select a country which is then used to narrow down a selection of country's secondary administrative division and so on **[POST](/blog/2020/12/hydra-shacl-templates)**
   - improve performance by filtering resources on the data source

<script src="/components/rdf-snippet.js"></script>
</User>
]]></content>
  </entry>
  
</feed>
