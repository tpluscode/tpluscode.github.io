<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: prototype | Tomasz Pluskiewicz]]></title>
  <link href="http://t-code.pl/blog/categories/prototype/atom.xml" rel="self"/>
  <link href="http://t-code.pl/"/>
  <updated>2021-03-28T12:28:09+00:00</updated>
  <id>http://t-code.pl/</id>
  <author>
    <name><![CDATA[Tomasz Pluskiewicz]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Inserting style tag dynamically with Prototype]]></title>
    <link href="http://t-code.pl/blog/2011/09/inserting-style-tag-dynamically/"/>
    <updated>2011-09-16T01:44:15-04:00</updated>
    <id>http://t-code.pl/blog/2011/09/inserting-style-tag-dynamically</id>
    <content type="html"><![CDATA[<p>Recently I created a small on-screen keyboard. I may present it on my blog some time later. For now I’d like to share my
experience with IE behaving different than other browsers (yet again).</p>

<p>The on-screen keyboard is a javascript class, which when created adds itself to document’s DOM. Doing that it also
creates itself some styles. Those styles are also updated when keyboard’s properties change.</p>

<!--more-->

<p>I’m using <a href="http://www.prototypejs.org/">prototype</a> and my initial (simplified to the core idea) solution is listed below.</p>

<p>``` js
recreateStyles = function() {
    styleElement = $(Numpad.styleId);</p>

<pre><code>if (styleElement == null) {
    $$('body')[0].insert(new Element('style', {
        id: Numpad.styleId
    }));
}
styleText = 'some style text';
Element.update(Numpad.styleId, styleText); } ```
</code></pre>

<p>The above works perfectly with <em>most</em> modern browser. These include Chrome, Firefox and IE9. Unfortunately a fairly
modern browser, which is IE8 refuses to add this style tag to the document. Not to mention IE6 ;)</p>

<p>Fortunately Uncle Google already had a solution. Stoyan Stefanov posted at his blog a solution for this problem and also 
a way to insert script tag dynamically. His post can be found here: <a href="http://www.phpied.com/dynamic-script-and-style-elements-in-ie/">http://www.phpied.com/dynamic-script-and-style-elements-in-ie/</a></p>

<p>Below I extracted the important part, JS code:
<code>js
var ss1 = document.createElement('style');
var def = 'some style text';
ss1.setAttribute("type", "text/css");
var hh1 = document.getElementsByTagName('head')[0];
hh1.appendChild(ss1);
if (ss1.styleSheet) {   // IE
    ss1.styleSheet.cssText = def;
} else {                // the world
    var tt1 = document.createTextNode(def);
    ss1.appendChild(tt1);
}
</code></p>

<p>The above works fine and I could have stayed with it and adjusted my code accordingly, but as I mentioned before,
I’m using prototype so I made the above utilize it:</p>

<p>``` js
Numpad.recreateStyleSheet = function () {
    styleElement = $(Numpad.styleId);</p>

<pre><code>if (styleElement == null) {
    styleElement = new Element('style', {
        id: Numpad.styleId
        });
    $$('body')[0].insert(styleElement);
}

styleText = 'some style text';&lt;/p&gt;

$$('head')[0].insert(styleElement);
if (styleElement.styleSheet) {   // IE
    styleElement.styleSheet.cssText = styleText;
} else {                // the world
    styleElement.update(styleText);
} }; ```
</code></pre>

<p>There! It’s a working way for inserting style tag into HTML document’s <code>&lt;head&gt;</code> (possibly anywhere), which works in IE8.
I also tested it in recent versions of Opera and Chrome and Firefox 3.6.</p>
]]></content>
  </entry>
  
</feed>
