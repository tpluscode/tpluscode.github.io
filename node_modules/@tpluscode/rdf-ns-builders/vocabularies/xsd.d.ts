import { NamespaceBuilder } from "@rdf-esm/namespace";
import { NamedNode } from "rdf-js";
declare type Xsd = NamespaceBuilder & {
    "ENTITIES": NamedNode;
    "ENTITY": NamedNode;
    "ID": NamedNode;
    "IDREF": NamedNode;
    "IDREFS": NamedNode;
    "NCName": NamedNode;
    "NMTOKEN": NamedNode;
    "NMTOKENS": NamedNode;
    "NOTATION": NamedNode;
    "Name": NamedNode;
    "QName": NamedNode;
    "anyAtomicType": NamedNode;
    "anySimpleType": NamedNode;
    "anyType": NamedNode;
    "anyURI": NamedNode;
    "base64Binary": NamedNode;
    "boolean": NamedNode;
    "byte": NamedNode;
    "date": NamedNode;
    "dateTime": NamedNode;
    "dateTimeStamp": NamedNode;
    "dayTimeDuration": NamedNode;
    "decimal": NamedNode;
    "double": NamedNode;
    "duration": NamedNode;
    "float": NamedNode;
    "gDay": NamedNode;
    "gMonth": NamedNode;
    "gMonthDay": NamedNode;
    "gYear": NamedNode;
    "gYearMonth": NamedNode;
    "hexBinary": NamedNode;
    "int": NamedNode;
    "integer": NamedNode;
    "language": NamedNode;
    "long": NamedNode;
    "negativeInteger": NamedNode;
    "nonNegativeInteger": NamedNode;
    "nonPositiveInteger": NamedNode;
    "normalizedString": NamedNode;
    "positiveInteger": NamedNode;
    "short": NamedNode;
    "string": NamedNode;
    "time": NamedNode;
    "token": NamedNode;
    "unsignedByte": NamedNode;
    "unsignedInt": NamedNode;
    "unsignedLong": NamedNode;
    "unsignedShort": NamedNode;
    "yearMonthDuration": NamedNode;
};
export declare const xsd: Xsd;
export {};
//# sourceMappingURL=xsd.d.ts.map