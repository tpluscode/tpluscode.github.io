import { NamespaceBuilder } from "@rdf-esm/namespace";
import { NamedNode } from "rdf-js";
declare type Oa = NamespaceBuilder & {
    "Annotation": NamedNode;
    "Choice": NamedNode;
    "CssSelector": NamedNode;
    "CssStyle": NamedNode;
    "DataPositionSelector": NamedNode;
    "Direction": NamedNode;
    "FragmentSelector": NamedNode;
    "HttpRequestState": NamedNode;
    "Motivation": NamedNode;
    "PreferContainedDescriptions": NamedNode;
    "PreferContainedIRIs": NamedNode;
    "RangeSelector": NamedNode;
    "ResourceSelection": NamedNode;
    "Selector": NamedNode;
    "SpecificResource": NamedNode;
    "State": NamedNode;
    "Style": NamedNode;
    "SvgSelector": NamedNode;
    "TextPositionSelector": NamedNode;
    "TextQuoteSelector": NamedNode;
    "TextualBody": NamedNode;
    "TimeState": NamedNode;
    "XPathSelector": NamedNode;
    "annotationService": NamedNode;
    "assessing": NamedNode;
    "bodyValue": NamedNode;
    "bookmarking": NamedNode;
    "cachedSource": NamedNode;
    "canonical": NamedNode;
    "classifying": NamedNode;
    "commenting": NamedNode;
    "describing": NamedNode;
    "editing": NamedNode;
    "end": NamedNode;
    "exact": NamedNode;
    "hasBody": NamedNode;
    "hasEndSelector": NamedNode;
    "hasPurpose": NamedNode;
    "hasScope": NamedNode;
    "hasSelector": NamedNode;
    "hasSource": NamedNode;
    "hasStartSelector": NamedNode;
    "hasState": NamedNode;
    "hasTarget": NamedNode;
    "highlighting": NamedNode;
    "identifying": NamedNode;
    "linking": NamedNode;
    "ltrDirection": NamedNode;
    "moderating": NamedNode;
    "motivatedBy": NamedNode;
    "prefix": NamedNode;
    "processingLanguage": NamedNode;
    "questioning": NamedNode;
    "refinedBy": NamedNode;
    "renderedVia": NamedNode;
    "replying": NamedNode;
    "rtlDirection": NamedNode;
    "sourceDate": NamedNode;
    "sourceDateEnd": NamedNode;
    "sourceDateStart": NamedNode;
    "start": NamedNode;
    "styleClass": NamedNode;
    "styledBy": NamedNode;
    "suffix": NamedNode;
    "tagging": NamedNode;
    "textDirection": NamedNode;
    "via": NamedNode;
};
export declare const oa: Oa;
export {};
//# sourceMappingURL=oa.d.ts.map