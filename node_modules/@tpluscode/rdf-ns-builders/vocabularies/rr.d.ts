import { NamespaceBuilder } from "@rdf-esm/namespace";
import { NamedNode } from "rdf-js";
declare type Rr = NamespaceBuilder & {
    "BaseTableOrView": NamedNode;
    "BlankNode": NamedNode;
    "GraphMap": NamedNode;
    "IRI": NamedNode;
    "Join": NamedNode;
    "Literal": NamedNode;
    "LogicalTable": NamedNode;
    "ObjectMap": NamedNode;
    "PredicateMap": NamedNode;
    "PredicateObjectMap": NamedNode;
    "R2RMLView": NamedNode;
    "RefObjectMap": NamedNode;
    "SQL2008": NamedNode;
    "SubjectMap": NamedNode;
    "TermMap": NamedNode;
    "TriplesMap": NamedNode;
    "child": NamedNode;
    "class": NamedNode;
    "column": NamedNode;
    "constant": NamedNode;
    "datatype": NamedNode;
    "defaultGraph": NamedNode;
    "graph": NamedNode;
    "graphMap": NamedNode;
    "inverseExpression": NamedNode;
    "joinCondition": NamedNode;
    "language": NamedNode;
    "logicalTable": NamedNode;
    "object": NamedNode;
    "objectMap": NamedNode;
    "parent": NamedNode;
    "parentTriplesMap": NamedNode;
    "predicate": NamedNode;
    "predicateMap": NamedNode;
    "predicateObjectMap": NamedNode;
    "sqlQuery": NamedNode;
    "sqlVersion": NamedNode;
    "subject": NamedNode;
    "subjectMap": NamedNode;
    "tableName": NamedNode;
    "template": NamedNode;
    "termType": NamedNode;
};
export declare const rr: Rr;
export {};
//# sourceMappingURL=rr.d.ts.map