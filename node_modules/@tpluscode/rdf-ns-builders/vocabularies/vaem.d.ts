import { NamespaceBuilder } from "@rdf-esm/namespace";
import { NamedNode } from "rdf-js";
declare type Vaem = NamespaceBuilder & {
    "Aspect": NamedNode;
    "CatalogEntry": NamedNode;
    "CollectionGraph": NamedNode;
    "ConstraintsGraph": NamedNode;
    "ControllersGraph": NamedNode;
    "CurationGraph": NamedNode;
    "DataGraph": NamedNode;
    "Dimension": NamedNode;
    "Discipline": NamedNode;
    "DocumentationGraph": NamedNode;
    "Domain": NamedNode;
    "FunctionsGraph": NamedNode;
    "GMD_VAEM": NamedNode;
    "GraphMetaData": NamedNode;
    "GraphRole": NamedNode;
    "LinkSetGraph": NamedNode;
    "MappingGraph": NamedNode;
    "Party": NamedNode;
    "ProxyGraph": NamedNode;
    "RulesGraph": NamedNode;
    "SchemaGraph": NamedNode;
    "ScriptGraph": NamedNode;
    "TopQuadrant": NamedNode;
    "TransformsGraph": NamedNode;
    "ViewGraph": NamedNode;
    "Viewpoint": NamedNode;
    "VocabularyGraph": NamedNode;
    "abbreviation": NamedNode;
    "acronym": NamedNode;
    "comment": NamedNode;
    "date": NamedNode;
    "dateCreated": NamedNode;
    "description": NamedNode;
    "filePrefix": NamedNode;
    "hasAspect": NamedNode;
    "hasDimension": NamedNode;
    "hasDiscipline": NamedNode;
    "hasDomain": NamedNode;
    "hasGraphMetadata": NamedNode;
    "hasGraphRole": NamedNode;
    "hasIdentifier": NamedNode;
    "hasLicenseType": NamedNode;
    "hasMetadata": NamedNode;
    "hasOwner": NamedNode;
    "hasSteward": NamedNode;
    "hasViewpoint": NamedNode;
    "id": NamedNode;
    "idString": NamedNode;
    "intent": NamedNode;
    "isElaboratedIn": NamedNode;
    "lastUpdated": NamedNode;
    "latestPublishedVersion": NamedNode;
    "logo": NamedNode;
    "name": NamedNode;
    "namespace": NamedNode;
    "namespacePrefix": NamedNode;
    "ownedBy": NamedNode;
    "owner": NamedNode;
    "owningParty": NamedNode;
    "previousPublishedVersion": NamedNode;
    "rationale": NamedNode;
    "rdfxmlFileURL": NamedNode;
    "reifiableBy": NamedNode;
    "releaseDate": NamedNode;
    "revision": NamedNode;
    "specificity": NamedNode;
    "title": NamedNode;
    "todo": NamedNode;
    "turtleFileURL": NamedNode;
    "url": NamedNode;
    "usesNonImportedResource": NamedNode;
    "withAttributionTo": NamedNode;
};
export declare const vaem: Vaem;
export {};
//# sourceMappingURL=vaem.d.ts.map