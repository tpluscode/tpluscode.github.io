import { NamespaceBuilder } from "@rdf-esm/namespace";
import { NamedNode } from "rdf-js";
declare type Owl = NamespaceBuilder & {
    "AllDifferent": NamedNode;
    "AllDisjointClasses": NamedNode;
    "AllDisjointProperties": NamedNode;
    "Annotation": NamedNode;
    "AnnotationProperty": NamedNode;
    "AsymmetricProperty": NamedNode;
    "Axiom": NamedNode;
    "Class": NamedNode;
    "DataRange": NamedNode;
    "DatatypeProperty": NamedNode;
    "DeprecatedClass": NamedNode;
    "DeprecatedProperty": NamedNode;
    "FunctionalProperty": NamedNode;
    "InverseFunctionalProperty": NamedNode;
    "IrreflexiveProperty": NamedNode;
    "NamedIndividual": NamedNode;
    "NegativePropertyAssertion": NamedNode;
    "Nothing": NamedNode;
    "ObjectProperty": NamedNode;
    "Ontology": NamedNode;
    "OntologyProperty": NamedNode;
    "ReflexiveProperty": NamedNode;
    "Restriction": NamedNode;
    "SymmetricProperty": NamedNode;
    "Thing": NamedNode;
    "TransitiveProperty": NamedNode;
    "allValuesFrom": NamedNode;
    "annotatedProperty": NamedNode;
    "annotatedSource": NamedNode;
    "annotatedTarget": NamedNode;
    "assertionProperty": NamedNode;
    "backwardCompatibleWith": NamedNode;
    "bottomDataProperty": NamedNode;
    "bottomObjectProperty": NamedNode;
    "cardinality": NamedNode;
    "complementOf": NamedNode;
    "datatypeComplementOf": NamedNode;
    "deprecated": NamedNode;
    "differentFrom": NamedNode;
    "disjointUnionOf": NamedNode;
    "disjointWith": NamedNode;
    "distinctMembers": NamedNode;
    "equivalentClass": NamedNode;
    "equivalentProperty": NamedNode;
    "hasKey": NamedNode;
    "hasSelf": NamedNode;
    "hasValue": NamedNode;
    "imports": NamedNode;
    "incompatibleWith": NamedNode;
    "intersectionOf": NamedNode;
    "inverseOf": NamedNode;
    "maxCardinality": NamedNode;
    "maxQualifiedCardinality": NamedNode;
    "members": NamedNode;
    "minCardinality": NamedNode;
    "minQualifiedCardinality": NamedNode;
    "onClass": NamedNode;
    "onDataRange": NamedNode;
    "onDatatype": NamedNode;
    "onProperties": NamedNode;
    "onProperty": NamedNode;
    "oneOf": NamedNode;
    "priorVersion": NamedNode;
    "propertyChainAxiom": NamedNode;
    "propertyDisjointWith": NamedNode;
    "qualifiedCardinality": NamedNode;
    "sameAs": NamedNode;
    "someValuesFrom": NamedNode;
    "sourceIndividual": NamedNode;
    "targetIndividual": NamedNode;
    "targetValue": NamedNode;
    "topDataProperty": NamedNode;
    "topObjectProperty": NamedNode;
    "unionOf": NamedNode;
    "versionIRI": NamedNode;
    "versionInfo": NamedNode;
    "withRestrictions": NamedNode;
};
export declare const owl: Owl;
export {};
//# sourceMappingURL=owl.d.ts.map