import { NamespaceBuilder } from "@rdf-esm/namespace";
import { NamedNode } from "rdf-js";
declare type Prov = NamespaceBuilder & {
    "Accept": NamedNode;
    "Activity": NamedNode;
    "ActivityInfluence": NamedNode;
    "Agent": NamedNode;
    "AgentInfluence": NamedNode;
    "Association": NamedNode;
    "Attribution": NamedNode;
    "Bundle": NamedNode;
    "Collection": NamedNode;
    "Communication": NamedNode;
    "Contribute": NamedNode;
    "Contributor": NamedNode;
    "Copyright": NamedNode;
    "Create": NamedNode;
    "Creator": NamedNode;
    "Delegation": NamedNode;
    "Derivation": NamedNode;
    "Dictionary": NamedNode;
    "DirectQueryService": NamedNode;
    "EmptyCollection": NamedNode;
    "EmptyDictionary": NamedNode;
    "End": NamedNode;
    "Entity": NamedNode;
    "EntityInfluence": NamedNode;
    "Generation": NamedNode;
    "Influence": NamedNode;
    "Insertion": NamedNode;
    "InstantaneousEvent": NamedNode;
    "Invalidation": NamedNode;
    "KeyEntityPair": NamedNode;
    "Location": NamedNode;
    "Modify": NamedNode;
    "Organization": NamedNode;
    "Person": NamedNode;
    "Plan": NamedNode;
    "PrimarySource": NamedNode;
    "Publish": NamedNode;
    "Publisher": NamedNode;
    "Quotation": NamedNode;
    "Removal": NamedNode;
    "Replace": NamedNode;
    "Revision": NamedNode;
    "RightsAssignment": NamedNode;
    "RightsHolder": NamedNode;
    "Role": NamedNode;
    "ServiceDescription": NamedNode;
    "SoftwareAgent": NamedNode;
    "Start": NamedNode;
    "Submit": NamedNode;
    "Usage": NamedNode;
    "actedOnBehalfOf": NamedNode;
    "activity": NamedNode;
    "activityOfInfluence": NamedNode;
    "agent": NamedNode;
    "agentOfInfluence": NamedNode;
    "alternateOf": NamedNode;
    "aq": NamedNode;
    "asInBundle": NamedNode;
    "atLocation": NamedNode;
    "atTime": NamedNode;
    "category": NamedNode;
    "component": NamedNode;
    "constraints": NamedNode;
    "contributed": NamedNode;
    "definition": NamedNode;
    "derivedByInsertionFrom": NamedNode;
    "derivedByRemovalFrom": NamedNode;
    "describesService": NamedNode;
    "dictionary": NamedNode;
    "dm": NamedNode;
    "editorialNote": NamedNode;
    "editorsDefinition": NamedNode;
    "ended": NamedNode;
    "endedAtTime": NamedNode;
    "entity": NamedNode;
    "entityOfInfluence": NamedNode;
    "generalizationOf": NamedNode;
    "generated": NamedNode;
    "generatedAsDerivation": NamedNode;
    "generatedAtTime": NamedNode;
    "hadActivity": NamedNode;
    "hadDelegate": NamedNode;
    "hadDerivation": NamedNode;
    "hadDictionaryMember": NamedNode;
    "hadGeneration": NamedNode;
    "hadInfluence": NamedNode;
    "hadMember": NamedNode;
    "hadPlan": NamedNode;
    "hadPrimarySource": NamedNode;
    "hadRevision": NamedNode;
    "hadRole": NamedNode;
    "hadUsage": NamedNode;
    "has_anchor": NamedNode;
    "has_provenance": NamedNode;
    "has_query_service": NamedNode;
    "influenced": NamedNode;
    "influencer": NamedNode;
    "informed": NamedNode;
    "insertedKeyEntityPair": NamedNode;
    "invalidated": NamedNode;
    "invalidatedAtTime": NamedNode;
    "inverse": NamedNode;
    "locationOf": NamedNode;
    "mentionOf": NamedNode;
    "n": NamedNode;
    "order": NamedNode;
    "pairEntity": NamedNode;
    "pairKey": NamedNode;
    "pingback": NamedNode;
    "provenanceUriTemplate": NamedNode;
    "qualifiedAssociation": NamedNode;
    "qualifiedAssociationOf": NamedNode;
    "qualifiedAttribution": NamedNode;
    "qualifiedAttributionOf": NamedNode;
    "qualifiedCommunication": NamedNode;
    "qualifiedCommunicationOf": NamedNode;
    "qualifiedDelegation": NamedNode;
    "qualifiedDelegationOf": NamedNode;
    "qualifiedDerivation": NamedNode;
    "qualifiedDerivationOf": NamedNode;
    "qualifiedEnd": NamedNode;
    "qualifiedEndOf": NamedNode;
    "qualifiedForm": NamedNode;
    "qualifiedGeneration": NamedNode;
    "qualifiedGenerationOf": NamedNode;
    "qualifiedInfluence": NamedNode;
    "qualifiedInfluenceOf": NamedNode;
    "qualifiedInsertion": NamedNode;
    "qualifiedInvalidation": NamedNode;
    "qualifiedInvalidationOf": NamedNode;
    "qualifiedPrimarySource": NamedNode;
    "qualifiedQuotation": NamedNode;
    "qualifiedQuotationOf": NamedNode;
    "qualifiedRemoval": NamedNode;
    "qualifiedRevision": NamedNode;
    "qualifiedSourceOf": NamedNode;
    "qualifiedStart": NamedNode;
    "qualifiedStartOf": NamedNode;
    "qualifiedUsage": NamedNode;
    "qualifiedUsingActivity": NamedNode;
    "quotedAs": NamedNode;
    "removedKey": NamedNode;
    "revisedEntity": NamedNode;
    "sharesDefinitionWith": NamedNode;
    "specializationOf": NamedNode;
    "started": NamedNode;
    "startedAtTime": NamedNode;
    "todo": NamedNode;
    "unqualifiedForm": NamedNode;
    "used": NamedNode;
    "value": NamedNode;
    "wasActivityOfInfluence": NamedNode;
    "wasAssociateFor": NamedNode;
    "wasAssociatedWith": NamedNode;
    "wasAttributedTo": NamedNode;
    "wasDerivedFrom": NamedNode;
    "wasEndedBy": NamedNode;
    "wasGeneratedBy": NamedNode;
    "wasInfluencedBy": NamedNode;
    "wasInformedBy": NamedNode;
    "wasInvalidatedBy": NamedNode;
    "wasMemberOf": NamedNode;
    "wasPlanOf": NamedNode;
    "wasPrimarySourceOf": NamedNode;
    "wasQuotedFrom": NamedNode;
    "wasRevisionOf": NamedNode;
    "wasRoleIn": NamedNode;
    "wasStartedBy": NamedNode;
    "wasUsedBy": NamedNode;
    "wasUsedInDerivation": NamedNode;
};
export declare const prov: Prov;
export {};
//# sourceMappingURL=prov.d.ts.map